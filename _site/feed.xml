<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaeuk&apos;s Blog</title>
    <description>Data Science | ML/DL | Data engineering</description>
    <link>https://didwodnr123.github.io/</link>
    <atom:link href="https://didwodnr123.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 01 Jul 2021 15:57:27 +0900</pubDate>
    <lastBuildDate>Thu, 01 Jul 2021 15:57:27 +0900</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>[백준] 2178: 미로탐색</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2178&quot;&gt;Source: BOJ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;

&lt;p&gt;N×M크기의 배열로 표현되는 미로가 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;미로에서 1은 이동할 수 있는 칸을 나타내고, 0은 이동할 수 없는 칸을 나타낸다. 이러한 미로가 주어졌을 때, (1, 1)에서 출발하여 (N, M)의 위치로 이동할 때 지나야 하는 최소의 칸 수를 구하는 프로그램을 작성하시오. 한 칸에서 다른 칸으로 이동할 때, 서로 인접한 칸으로만 이동할 수 있다.&lt;/p&gt;

&lt;p&gt;위의 예에서는 15칸을 지나야 (N, M)의 위치로 이동할 수 있다. 칸을 셀 때에는 시작 위치와 도착 위치도 포함한다.&lt;/p&gt;

&lt;h2 id=&quot;입력&quot;&gt;입력&lt;/h2&gt;

&lt;p&gt;첫째 줄에 두 정수 N, M(2 ≤ N, M ≤ 100)이 주어진다. 다음 N개의 줄에는 M개의 정수로 미로가 주어진다. 각각의 수들은 &lt;strong&gt;붙어서&lt;/strong&gt; 입력으로 주어진다.&lt;/p&gt;

&lt;h2 id=&quot;출력&quot;&gt;출력&lt;/h2&gt;

&lt;p&gt;첫째 줄에 지나야 하는 최소의 칸 수를 출력한다. 항상 도착위치로 이동할 수 있는 경우만 입력으로 주어진다.&lt;/p&gt;

&lt;h4 id=&quot;예제-입력-1&quot;&gt;예제 입력 1&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;4 6
101111
101010
101011
111011
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;예제-출력-1&quot;&gt;예제 출력 1&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;15
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;예제-입력-2&quot;&gt;예제 입력 2&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;4 6
110110
110110
111111
111101
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;예제-출력-2&quot;&gt;예제 출력 2&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;9
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;구현&quot;&gt;구현&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# queue 생성
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 큐에 첫 시작 지점 넣기
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 큐가 비어있지 않다면
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popleft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 큐에서 pop
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 상 하 좌 우, 이동할 수 있는 지점 체크 
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# 범위 밖으로 나간다면 무시
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# 벽이라면 무시
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# 이동할 수 있고, 처음 방문한다면
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 다음 위치 = 그래프 전 위치 +1
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 큐에 다음 위치 삽입
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# 마지막 그래프 좌표의 값 == 이동횟수 출력
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 상, 하, 좌, 우
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;정리&quot;&gt;정리&lt;/h4&gt;

&lt;p&gt;미로탐색 문제는 BFS(너비 우선 탐색)을 사용하여 푸는 문제였다. 우선 BFS는 기본적으로 큐를 사용하여 푸는데, 파이썬 리스트로 구현하는 것 보다 collections의 deque (덱) 을 사용해서 풀면 시간복잡도 측면에서 낫다고 한다. 큐를 구현해서 첫 지점을 큐에 넣는 것으로 시작해서 상, 하, 좌, 우, 위치를 살펴보며 1. 그래프 범위 밖인지, 2. 벽인지 두 가지 조건으로 예외 처리를 해준다. 한 칸 이동할 때마다 해당 좌표의 값을 1에서 이전 값 만큼 더해서 얼마나 이동한지 표시해주는 방법이 중요하다. 마지막으로 탈출구의 좌표값에 들어있는 이동한 거리를 출력해준다.&lt;/p&gt;

&lt;h4 id=&quot;어려웠던-점&quot;&gt;어려웠던 점&lt;/h4&gt;

&lt;p&gt;만약&lt;/p&gt;

&lt;p&gt;1 1 1&lt;/p&gt;

&lt;p&gt;0 1 0&lt;/p&gt;

&lt;p&gt;0 1 1&lt;/p&gt;

&lt;p&gt;같은 그래프라면, (0,2)로, 길이없는 곳으로 잘못 이동했을 경우에는 어떻게 처리되는지 헷갈렸다. 하지만 방문할 때마다 이동 거리를 더해주기 때문에 재방문은 하지 않고 상하좌우가 뚫려있는 곳으로 이동할 수 있었다.&lt;/p&gt;

</description>
        <pubDate>Sun, 13 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/maze.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/maze.html</guid>
        
        <category>Algorithm</category>
        
        <category>BOJ</category>
        
        <category>Search</category>
        
        <category>BFS</category>
        
        
      </item>
    
      <item>
        <title>[백준] 2839: 설탕 배달</title>
        <description>&lt;h2 id=&quot;설탕-배달&quot;&gt;설탕 배달&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2839&quot;&gt;Reference: Baekjoon Online Judge&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;문제&quot;&gt;문제&lt;/h4&gt;

&lt;p&gt;상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.&lt;/p&gt;

&lt;p&gt;상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.&lt;/p&gt;

&lt;p&gt;상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h4 id=&quot;입력&quot;&gt;입력&lt;/h4&gt;

&lt;p&gt;첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)&lt;/p&gt;

&lt;h4 id=&quot;출력&quot;&gt;출력&lt;/h4&gt;

&lt;p&gt;상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.&lt;/p&gt;

&lt;h4 id=&quot;예제-입력&quot;&gt;예제 입력&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;예제-출력&quot;&gt;예제 출력&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;구현&quot;&gt;구현&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;sugar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sugar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sugar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sugar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sugar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설탕 배달 문제는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Greedy&lt;/code&gt; 알고리즘 유형이다. 반복문을 사용해서 가장 최적의 값을 탐욕적으로 찾아낸다. 이 문제는 5로 나눠질때까지 3을 빼면 된다. 예를 들어 18은 5의 배수가 아니니 3을 빼준다. 3을 빼면 15가 되어 5킬로 봉지 3개와 이전에 제외했던 3키로를 더해서 총 4개의 봉지로 배달할 수 있다.&lt;/p&gt;

&lt;p&gt;처음 문제를 풀 때는 5로 나눠서 몫과 나머지를 구하고 나머지를 3으로 나눠서 몫과 나머지를 구했다. 이 방법을 사용하면 입력에 11이 주어졌을 경우를 풀 지 못한다. 11이 주어지면 5로 2번 나누어 나머지가 1이 남게 됨으로 3으로 나눌 수 없다고 코드가 판단하고 -1을 리턴한다. 따라서 위 코드 처럼 3을 빼면서 5의 배수로 맞춰주면 쉽게 해결할 수 있다.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/sugar.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/sugar.html</guid>
        
        <category>Algorithm</category>
        
        <category>BOJ</category>
        
        <category>Greedy</category>
        
        
      </item>
    
      <item>
        <title>[프로그래머스] 정렬: H-index</title>
        <description>&lt;h2 id=&quot;h-index&quot;&gt;H-index&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42747&quot;&gt;Reference: Programmers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h4&gt;

&lt;p&gt;H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42747#fn1&quot;&gt;1&lt;/a&gt;에 따르면, H-Index는 다음과 같이 구합니다.&lt;/p&gt;

&lt;p&gt;어떤 과학자가 발표한 논문 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;편 중, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt;번 이상 인용된 논문이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt;편 이상이고 나머지 논문이 h번 이하 인용되었다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt;의 최댓값이 이 과학자의 H-Index입니다.&lt;/p&gt;

&lt;p&gt;어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;과학자가 발표한 논문의 수는 1편 이상 1,000편 이하입니다.&lt;/li&gt;
  &lt;li&gt;논문별 인용 횟수는 0회 이상 10,000회 이하입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;citations&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[3, 0, 6, 1, 5]&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;입출력-예-설명&quot;&gt;입출력 예 설명&lt;/h4&gt;

&lt;p&gt;이 과학자가 발표한 논문의 수는 5편이고, 그중 3편의 논문은 3회 이상 인용되었습니다. 그리고 나머지 2편의 논문은 3회 이하 인용되었기 때문에 이 과학자의 H-Index는 3입니다.&lt;/p&gt;

&lt;h4 id=&quot;구현&quot;&gt;구현&lt;/h4&gt;

&lt;h4 id=&quot;오류-코드&quot;&gt;오류 코드&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;처음에 citations[i]를 리턴하려고 했다. 테스트 케이스를 1개 빼고 통과하지 못하였다. 왜 안될까.&lt;/p&gt;

&lt;p&gt;[0,1,3,5,6] 리스트는 잘 동작한다. 하지만 [1,1,1,1,1,9] 리스트를 적용하면 1을 리턴해야 하는데 9를 리턴하는 오류를 범한다.&lt;/p&gt;

&lt;h4 id=&quot;올바른-코드&quot;&gt;올바른 코드&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;citations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;H-index 문제는 오름차순으로 리스트를 정렬한 후, 계산하면 편리하다.&lt;/p&gt;

&lt;p&gt;오름차순으로 정렬된 리스트 우측으로 나보다 큰 수가 나만큼 남아있으면 결국 그 자리의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l-i&lt;/code&gt;값이 정답이 된다.&lt;/p&gt;

</description>
        <pubDate>Wed, 09 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/h-index.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/h-index.html</guid>
        
        <category>Algorithm</category>
        
        <category>Programmers</category>
        
        <category>Sort</category>
        
        
      </item>
    
      <item>
        <title>[알고리즘] 정렬: 선택 정렬</title>
        <description>&lt;h1 id=&quot;selection-sort&quot;&gt;Selection Sort&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Selection Sort&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;선택 정렬&lt;/strong&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in-place&lt;/code&gt; 비교 정렬 알고리즘이다. O(n^2) 시간 복잡도를 갖고 있고, 대규모 리스트에서는 비효율적이다. 일반적으로 &lt;strong&gt;삽입 정렬&lt;/strong&gt;보다 성능이 떨어진다. 선택 정렬 알고리즘은 단순하여 사용할 수 있는 메모리가 제한적인 경우에 효과적이다.&lt;/p&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;예시&lt;/li&gt;
  &lt;li&gt;구현&lt;/li&gt;
  &lt;li&gt;복잡도&lt;/li&gt;
  &lt;li&gt;다른 정렬 알고리즘과 비교&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;예시&quot;&gt;예시&lt;/h2&gt;

&lt;table class=&quot;wikitable&quot;&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;th&gt;Sorted sublist
&lt;/th&gt;
&lt;th&gt;Unsorted sublist
&lt;/th&gt;
&lt;th&gt;Least element in unsorted list
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;()
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;(11, 25, 12, 22, 64)
&lt;/td&gt;
&lt;td&gt;11
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(11)
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;(25, 12, 22, 64)
&lt;/td&gt;
&lt;td&gt;12
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(11, 12)
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;(25, 22, 64)
&lt;/td&gt;
&lt;td&gt;22
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(11, 12, 22)
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;(25, 64)
&lt;/td&gt;
&lt;td&gt;25
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(11, 12, 22, 25)
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;(64)
&lt;/td&gt;
&lt;td&gt;64
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(11, 12, 22, 25, 64)
&lt;/td&gt;
&lt;td style=&quot;text-align:right;&quot;&gt;()
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;h2 id=&quot;구현&quot;&gt;구현&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;selectionSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;indexMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;indexMin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;복잡도&quot;&gt;복잡도&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Avg&lt;/th&gt;
      &lt;th&gt;Worst&lt;/th&gt;
      &lt;th&gt;Stable&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bubble  sort&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Selection sort&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;NO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Insertion sort&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;O(n^2)&lt;/td&gt;
      &lt;td&gt;YES&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;다른-정렬-알고리즘과-비교&quot;&gt;다른 정렬 알고리즘과 비교&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;버블 정렬(bubble sort) : 시간 복잡도 Θ ( &lt;em&gt;n&lt;/em&gt; 2 )인 정렬 알고리즘 중에서 선택 정렬은 버블 정렬보다 항상 우수하다.&lt;/li&gt;
  &lt;li&gt;삽입 정렬(insertion sort) : 삽입 정렬은 k번째 반복 이후, 첫번째 k 요소가 정렬된 순서로 온다는 점에서 유사하다. 하지만 선택 정렬은 k+1 번째 요소를 찾기 위해 나머지 모든 요소들을 탐색하지만 삽입 정렬은 k+1 번째 요소를 배치하는 데 필요한 만큼의 요소만 탐색하기 때문에 훨씬 효율적으로 실행된다는 차이가 있다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 08 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/selection-sort.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/selection-sort.html</guid>
        
        <category>Algorithm</category>
        
        <category>Sort</category>
        
        
      </item>
    
      <item>
        <title>[프로그래머스] 정렬: k번째수</title>
        <description>&lt;h2 id=&quot;k-번째-수&quot;&gt;K 번째 수&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42748&quot;&gt;Reference - Programmers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h4&gt;

&lt;p&gt;배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.&lt;/li&gt;
  &lt;li&gt;1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.&lt;/li&gt;
  &lt;li&gt;2에서 나온 배열의 3번째 숫자는 5입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;array의 길이는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;array의 각 원소는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 길이는 1 이상 50 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 각 원소는 길이가 3입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;array&lt;/th&gt;
      &lt;th&gt;commands&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[1, 5, 2, 6, 3, 7, 4]&lt;/td&gt;
      &lt;td&gt;[[2, 5, 3], [4, 4, 1], [1, 7, 3]]&lt;/td&gt;
      &lt;td&gt;[5, 6, 3]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;입출력-예-설명&quot;&gt;입출력 예 설명&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.&lt;/li&gt;
  &lt;li&gt;[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.&lt;/li&gt;
  &lt;li&gt;[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;구현&quot;&gt;구현&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lambda&lt;/code&gt; 식과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commands&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt;함수로 매핑하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&lt;/code&gt;객체로 반환한다. 처음에는 중첩 반복문을 사용하여 commands 2차원 리스트를 풀어내려고 했으나 lambda 식을 사용하면 중첩 반복문을 사용하지 않고 2차원 리스트를 풀어낼 수 있었다. 다른 사람 풀이를 참조해서 풀고나니 정말 쉬운 문제였고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list(map(lambda))&lt;/code&gt; 구조는 정렬뿐 만 아니라 다른 알고리즘에서도 널리 사용되니 익혀두어야 한다.&lt;/p&gt;

&lt;p&gt;이번 문제에서 lamba 식에 대한 이해도를 높일 수 있었다. 하지만, 최근 파이썬 공식 문서에서는 lambda의 사용을 권장하지 않는다.&lt;/p&gt;

</description>
        <pubDate>Tue, 08 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/knum.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/knum.html</guid>
        
        <category>Algorithm</category>
        
        <category>Programmers</category>
        
        <category>Sort</category>
        
        
      </item>
    
      <item>
        <title>[프로그래머스] 정렬: 가장 큰 수</title>
        <description>&lt;h2 id=&quot;가장-큰-수&quot;&gt;가장 큰 수&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42746&quot;&gt;Reference - Programmers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h4&gt;

&lt;p&gt;0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.&lt;/p&gt;

&lt;p&gt;예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.&lt;/p&gt;

&lt;p&gt;0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;numbers의 길이는 1 이상 100,000 이하입니다.&lt;/li&gt;
  &lt;li&gt;numbers의 원소는 0 이상 1,000 이하입니다.&lt;/li&gt;
  &lt;li&gt;정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;numbers&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[6, 10, 2]&lt;/td&gt;
      &lt;td&gt;“6210”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[3, 30, 34, 5, 9]&lt;/td&gt;
      &lt;td&gt;“9534330”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;구현&quot;&gt;구현&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;[가장 큰 수] 문제는 숫자를 문자열로 변환하고 변환된 문자열에 3을 곱해서 길이를 늘리고 문자열 비교로 정렬 후, 정답을 구하는 문제였다. 아마 내 말이 잘 이해가 되지 않을 것이다. 나 또한 이 문제를 풀면서 상당히 고생했다. 처음 문제를 접했을 때는 숫자를 어떻게 이어 붙이지? 부터 모든 인덱스별로 다양한 조합을 생성해야 겠다는 생각을 했었다. 하지만, 문제를 풀기 위해 시도할 수록 산으로 가는 느낌이었다. 결국 구글링을 통해 해답을 찾아 분석해보았다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;문자열 * 3&lt;/strong&gt;? 이게 무슨 말일까. 도무지 이해가 가지 않았다. 코드를 차근차근 뜯어보니 조금 이해가 갔다. 우선 가장 큰 수를 만들기 위해서는 1~9 중 가장 큰 수가 앞에 오는 것이 맞다. 6, 10, 2 중에서는 6이 가장 크니 앞에 놓고, 2, 10을 순차적으로 놓으면 되겠지? 라는 생각으로 다음 입력을 봤더니 또 다른 문제에 직면한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30&lt;/code&gt;은 어떻게 구별해야 할까. 여기서 문자열에 3을 곱하는 이유를 찾을 수 있다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;333&lt;/code&gt; 과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;303030&lt;/code&gt;중 컴퓨터는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;333&lt;/code&gt;을 더 큰 문자열로 인식한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ABC&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AAB&lt;/code&gt;와 같은 논리이다. 이것을 이해하고 마지막 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt;문을 보면 새로운 궁금증이 생긴다.&lt;/p&gt;

&lt;p&gt;이미 문자열인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numbers&lt;/code&gt;리스트를 왜 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;로 변환하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt;로 변환하는가. 이해가 가지 않아&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return &apos;&apos;.join(numbers)&lt;/code&gt;으로 제출해보았다. 결과는 마지막 테스트를 통과할 수 없었다. 문제는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;0000&apos;&lt;/code&gt;이었다. 0000은 논리적으로 말이 안 되는 수다. 0이 되어야 한다. 0000을 0으로 만들기 위해 int로 변환 후, str로 재변환 시키는 것이다.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Jun 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/biggest-num.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/biggest-num.html</guid>
        
        <category>Algorithm</category>
        
        <category>Programmers</category>
        
        <category>Sort</category>
        
        
      </item>
    
      <item>
        <title>[번역] 캐글: 머신러닝 시작하기</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;본 내용은 Kaggle &lt;a href=&quot;https://www.kaggle.com/dansbecker/how-models-work&quot;&gt;Intro to Machine Learning&lt;/a&gt; 을 참고하여 구성하였습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;우연히 유튜브에서 흥미로운 사람을 발견했습니다. Ken Jee 라는 유튜버인데, 데이터 사이언스에 관해 다양한 주제들로 영상을 제작하는 크리에이터 입니다. 이 분 영상 중  “&lt;a href=&quot;https://www.youtube.com/watch?v=4OZip0cgOho&quot;&gt;How I Would Learn Data Science (If I Had to Start Over)&lt;/a&gt;” 을 보면 데이터 사이언티스트를 준비하시는 분들에게 꽤나 도움이 될 것 같습니다. 다른 좋은 영상들도 많이 있으니 참고해보세요! Ken이 추천한 학습 방법 중 하나가 바로 제가 포스팅 할 &lt;strong&gt;Kaggle micro-course&lt;/strong&gt; 입니다. Python부터 SQL, ML, DL 까지 상세하게 정리되어 있고, 무엇보다 실습이 있다는 것이 가장 큰 장점입니다.&lt;/p&gt;

&lt;h2 id=&quot;how-models-work&quot;&gt;How Models Work&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/7tsb5b1.png&quot; alt=&quot;First Decision Trees&quot; /&gt;&lt;/p&gt;

&lt;p&gt;간단한 Decision Tree 모양입니다.&lt;/p&gt;

&lt;p&gt;이 Decision Tree는 오직 2개의 카테고리로 집들을 분류합니다. 예측된 가격은 같은 카테고리에 있는 집들의 평균 가격 정도로 이해하시면 됩니다.&lt;/p&gt;

&lt;p&gt;사람들은 어떻게 집들을 두 개의 카테고리로 나눌 지 데이터를 사용해서 결정한 후, 각 그룹의 예측 가격을 결정합니다. 데이터로부터 이 패턴을 구성하는 단계를 &lt;strong&gt;Fitting&lt;/strong&gt; or &lt;strong&gt;Training&lt;/strong&gt; the model 이라 합니다. Model을 Fitting 시키는 데 사용되는 데이터를 &lt;strong&gt;training data&lt;/strong&gt;라 합니다.&lt;/p&gt;

&lt;p&gt;어떻게 모델이 Fitting 되는 지에 대한 내용은 꽤 복잡하기 때문에 나중에 심화 과정에서 배워도 됩니다. 모델이 한 번 Fitting 되고 나면 새로운 데이터를 사용해서 추가적으로 집 값을 예측할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;improving-the-decision-tree&quot;&gt;Improving the Decision Tree&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/prAjgku.png&quot; alt=&quot;First Decision Trees&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일반적으로 방이 2개 이상인 집이 더 비쌉니다. 따라서 왼쪽 Tree가 더 논리적으로 맞다는 것을 확인할 수 있습니다. 하지만 이것의 가장 큰 단점은 집들의 다양한 특징들을 고려하지 못한다는 것입니다…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/R3ywQsR.png&quot; alt=&quot;Depth 2 Tree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;따라서 tree를 보다 &lt;strong&gt;Deep&lt;/strong&gt; 하게 구성해야 합니다. 이것도 사실은 부족하지만 이해를 돕기에는 충분하다고 생각합니다. 마지막으로 맨 끝에 위치한 박스? 를 &lt;strong&gt;Leaf&lt;/strong&gt;라고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;basic-data-exploration&quot;&gt;Basic Data Exploration&lt;/h2&gt;

&lt;h4 id=&quot;using-pandas-to-get-familiar-with-your-data&quot;&gt;Using Pandas to Get Familiar With Your Data&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;판다스 라이브러리 중 가장 중요한 것은 DataFrame 입니다. 데이터프레임은 데이터를 엑셀 표 처럼 구성해주는 역할을 합니다. 지금부터 Melbourne, Australia의 집값 데이터를 활용해서 pandas를 사용해보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;# save filepath to variable for easier access
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;melbourne_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;./data/melb_data.csv&apos;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# read the data and store data in DataFrame titled melbourne_data
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;melbourne_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;melbourne_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# print a summary of the data in Melbourne data
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;melbourne_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 31 May 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/intro-to-ML.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/intro-to-ML.html</guid>
        
        <category>Translation</category>
        
        <category>Kaggle</category>
        
        
      </item>
    
      <item>
        <title>[AI study] Week1: Intro to GAN</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;본 내용은 Coursera &lt;a href=&quot;https://www.coursera.org/programs/96b56ed6-2c7a-4373-92df-2d467731559d/browse?currentTab=CATALOG&amp;amp;productId=I7xTyNLAEeqdUQo9B2YGiw&amp;amp;productType=s12n&amp;amp;query=GAN&amp;amp;showMiniModal=true&quot;&gt;Build Basic Generative Adversarial Networks (GANs)&lt;/a&gt; Lecture 기반으로 구성했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;지난주, Coursera Andrew Ng 교수님의 Deep learning specialization을 마무리했습니다. 이번주부터는 굉장히 섬세한 fake 이미지를 생성할 수 있는 GAN 모델을 다루는 강의를 시청하고 리뷰할 예정입니다.&lt;/p&gt;

&lt;p&gt;GAN 이란 Generative Adverarial Network의 약자로, 하나의 모델이 가짜 이미지를 생성하고 다른 모델이 진짜 이미지와 가짜 이미지를 구분? 하면서 Generator 모델이 더욱 완벽한 fake 이미지를 만들 수 있도록 training 합니다.&lt;/p&gt;

&lt;h2 id=&quot;generative-models&quot;&gt;Generative Models&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/AI_study/gan1.png&quot; alt=&quot;GAN&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Random noise를 input에 주고 fake image를 생성합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Discriminator&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Real image를 input에 주고 학습시킵니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;학습이 완료되면 Random Noise를 input으로 Generator에 주게 되면 정교한 fake 이미지를 생성하게 됩니다. 그리고 위 모델들이 경쟁하며 성능을 향상시키는 구조를 갖고 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Generative models learn to produce &lt;strong&gt;realistic&lt;/strong&gt; examples&lt;/li&gt;
  &lt;li&gt;Discriminative models distinguish between classes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;real-life-gans&quot;&gt;Real Life GANs&lt;/h2&gt;

&lt;p&gt;Ian Goodfellow is known as the creator of the GAN.&lt;/p&gt;

&lt;p&gt;not limited to human faces&lt;/p&gt;

&lt;p&gt;image translation : horse to zebra, vice versa&lt;/p&gt;

&lt;p&gt;draw something -&amp;gt; able to produce realistic image&lt;/p&gt;

&lt;p&gt;Monariza -&amp;gt; moving&lt;/p&gt;

&lt;p&gt;Companies Using GANs&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adobe&lt;/li&gt;
  &lt;li&gt;Google (text generation)&lt;/li&gt;
  &lt;li&gt;IBM (data augmentation) : x enough data -&amp;gt; augmentation&lt;/li&gt;
  &lt;li&gt;whatever you like&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;summary-1&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;GANs’ performance is rapidly improving&lt;/li&gt;
  &lt;li&gt;Huge opportunity to work in this space!&lt;/li&gt;
  &lt;li&gt;Major companies are using them&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;intuition-behind-gans&quot;&gt;Intuition Behind GANs&lt;/h2&gt;

&lt;h4 id=&quot;outline&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the goal of the generator and the discriminator&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the competition between them&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Generator : learn to make fakes that look real&lt;/p&gt;

&lt;p&gt;Discriminator : learns to distinguish real from fake&lt;/p&gt;

&lt;p&gt;First, train a discriminator&lt;/p&gt;

&lt;h4 id=&quot;summary-2&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;generator’s&lt;/strong&gt; goal is to fool the discriminator&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;discriminator’s&lt;/strong&gt; goal is to distinguish between real and fake&lt;/li&gt;
  &lt;li&gt;They learn from the competition with each other&lt;/li&gt;
  &lt;li&gt;At the end, &lt;strong&gt;fakes&lt;/strong&gt; look &lt;strong&gt;real&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;discriminator&quot;&gt;Discriminator&lt;/h2&gt;

&lt;h4 id=&quot;outline-1&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Review of classifiers&lt;/li&gt;
  &lt;li&gt;The role of classifiers in terms of probability&lt;/li&gt;
  &lt;li&gt;Discriminator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Discriminator : Distinguish between different classes&lt;/p&gt;

&lt;h4 id=&quot;summary-3&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;discriminator&lt;/strong&gt; is a classifier&lt;/li&gt;
  &lt;li&gt;It learns the probability of class Y (&lt;strong&gt;real&lt;/strong&gt; or &lt;strong&gt;fake&lt;/strong&gt;) given features X&lt;/li&gt;
  &lt;li&gt;The probabilities are the feedback for the &lt;strong&gt;generator&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;generator&quot;&gt;Generator&lt;/h2&gt;

&lt;h4 id=&quot;outline-2&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;What the generator does&lt;/li&gt;
  &lt;li&gt;How it improves its performance&lt;/li&gt;
  &lt;li&gt;Generator in terms of probability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Noise vector - different output&lt;/p&gt;

&lt;p&gt;Noise -&amp;gt; &lt;strong&gt;Generator&lt;/strong&gt; -&amp;gt; Features(X hat) -&amp;gt; **Discriminator ** -&amp;gt; Output (Y hat) -&amp;gt; Cost -&amp;gt; update Generator’s Parameters&lt;/p&gt;

&lt;h4 id=&quot;summary-4&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;Generator&lt;/strong&gt; produces fake data&lt;/li&gt;
  &lt;li&gt;It learns the probability of features X&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Generator&lt;/strong&gt; takes as input noise (random features)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bce-cost-function&quot;&gt;BCE Cost Function&lt;/h2&gt;

&lt;h4 id=&quot;outline-3&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Binary Cross Entropy(BCE) Loss equation by parts&lt;/li&gt;
  &lt;li&gt;How it looks graphically&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;summary-5&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;The BCE cost function has two parts (one relevant for each class)&lt;/li&gt;
  &lt;li&gt;Close to zero when label and the prediction are similar&lt;/li&gt;
  &lt;li&gt;Approaches infinity when the label and the prediction are different&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;putting-it-all-together&quot;&gt;Putting It All Together&lt;/h2&gt;

&lt;h4 id=&quot;outline-4&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;How the whole architecture looks&lt;/li&gt;
  &lt;li&gt;How to train GANs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;summary-6&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;GANs train in an alternating fashion&lt;/li&gt;
  &lt;li&gt;The two models should always be at a similar “skill” level&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;intro-to-pytorch&quot;&gt;Intro to PyTorch&lt;/h2&gt;

&lt;h4 id=&quot;outline-5&quot;&gt;Outline&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Comparison with TensorFlow&lt;/li&gt;
  &lt;li&gt;Dfining Models&lt;/li&gt;
  &lt;li&gt;Training&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/AI_study/pytorch_vs_tensorflow.png&quot; alt=&quot;GAN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/didwodnr123/didwodnr123.github.io/blob/main/img/AI_study/5.PNG?raw=true&quot; alt=&quot;GAN1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/didwodnr123/didwodnr123.github.io/blob/main/img/AI_study/6.PNG?raw=true&quot; alt=&quot;GAN2&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;summary-7&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;PyTorch makes computations on the run&lt;/li&gt;
  &lt;li&gt;Dynamic computational graphs in PyTorch&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Just another framework, and similar to Tensorflow!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 27 May 2021 00:00:00 +0900</pubDate>
        <link>https://didwodnr123.github.io/week1.html</link>
        <guid isPermaLink="true">https://didwodnr123.github.io/week1.html</guid>
        
        <category>AI Study</category>
        
        <category>GAN</category>
        
        
      </item>
    
  </channel>
</rss>
