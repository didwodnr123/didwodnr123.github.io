I"Z<h2 id="k-번째-수">K 번째 수</h2>

<blockquote>
  <p><a href="https://programmers.co.kr/learn/courses/30/lessons/42748">Reference - Programmers</a></p>
</blockquote>

<h4 id="문제-설명">문제 설명</h4>

<p>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.</p>

<p>예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면</p>

<ol>
  <li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.</li>
  <li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.</li>
  <li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>
</ol>

<p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>

<h4 id="제한사항">제한사항</h4>

<ul>
  <li>array의 길이는 1 이상 100 이하입니다.</li>
  <li>array의 각 원소는 1 이상 100 이하입니다.</li>
  <li>commands의 길이는 1 이상 50 이하입니다.</li>
  <li>commands의 각 원소는 길이가 3입니다.</li>
</ul>

<h4 id="입출력-예">입출력 예</h4>

<table>
  <thead>
    <tr>
      <th>array</th>
      <th>commands</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[1, 5, 2, 6, 3, 7, 4]</td>
      <td>[[2, 5, 3], [4, 4, 1], [1, 7, 3]]</td>
      <td>[5, 6, 3]</td>
    </tr>
  </tbody>
</table>

<h4 id="입출력-예-설명">입출력 예 설명</h4>

<ul>
  <li>[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.</li>
  <li>[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.</li>
  <li>[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.</li>
</ul>

<h4 id="구현">구현</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="n">commands</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">array</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span> <span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]])[</span><span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">commands</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">answer</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">lambda</code> 식과 <code class="language-plaintext highlighter-rouge">commands</code>를 <code class="language-plaintext highlighter-rouge">map</code>함수로 매핑하여 <code class="language-plaintext highlighter-rouge">list</code>객체로 반환한다. 처음에는 중첩 반복문을 사용하여 commands 2차원 리스트를 풀어내려고 했으나 lambda 식을 사용하면 중첩 반복문을 사용하지 않고 2차원 리스트를 풀어낼 수 있었다. 다른 사람 풀이를 참조해서 풀고나니 정말 쉬운 문제였고, <code class="language-plaintext highlighter-rouge">list(map(lambda))</code> 구조는 정렬뿐 만 아니라 다른 알고리즘에서도 널리 사용되니 익혀두어야 한다.</p>

<p>이번 문제에서 lamba 식에 대한 이해도를 높일 수 있었다. 하지만, 최근 파이썬 공식 문서에서는 lambda의 사용을 권장하지 않는다.</p>

:ET